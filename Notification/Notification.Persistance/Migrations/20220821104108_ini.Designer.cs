// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Notification.Persistance.Context;

#nullable disable

namespace Notification.Persistance.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20220821104108_ini")]
    partial class ini
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("GroupFrindsPhonebook", b =>
                {
                    b.Property<long>("GroupFrindsId")
                        .HasColumnType("bigint");

                    b.Property<long>("PhonebooksId")
                        .HasColumnType("bigint");

                    b.HasKey("GroupFrindsId", "PhonebooksId");

                    b.HasIndex("PhonebooksId");

                    b.ToTable("GroupFrindsPhonebook");
                });

            modelBuilder.Entity("Notification.Domain.Entities.Common.DocumentsUser", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<bool>("Confirmcheck")
                        .HasColumnType("bit");

                    b.Property<long>("IdDocumentType")
                        .HasColumnType("bigint");

                    b.Property<long>("IdUser")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("InsertTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRemoved")
                        .HasColumnType("bit");

                    b.Property<string>("PathofSave")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RemoveTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdDocumentType");

                    b.HasIndex("IdUser");

                    b.ToTable("DocumentsUser");
                });

            modelBuilder.Entity("Notification.Domain.Entities.Common.DocumentType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("InsertTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRemoved")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("RemoveTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("DocumentType");
                });

            modelBuilder.Entity("Notification.Domain.Entities.Common.Projects", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("IdUser")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("InsertTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRemoved")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("RemoveTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("TitleProject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("Notification.Domain.Entities.Common.Users", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("DeadlinePackage")
                        .HasColumnType("datetime2");

                    b.Property<long>("IdPackageTariff")
                        .HasColumnType("bigint");

                    b.Property<long>("IdUSerType")
                        .HasColumnType("bigint");

                    b.Property<long>("IdUser")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("InsertTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRemoved")
                        .HasColumnType("bit");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RemoveTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdPackageTariff");

                    b.HasIndex("IdUSerType");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Notification.Domain.Entities.Common.Usertype", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("InsertTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRemoved")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("RemoveTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Usertype");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            InsertTime = new DateTime(2022, 8, 21, 15, 11, 8, 139, DateTimeKind.Local).AddTicks(1457),
                            IsRemoved = false,
                            Title = "Real"
                        },
                        new
                        {
                            Id = 2L,
                            InsertTime = new DateTime(2022, 8, 21, 15, 11, 8, 139, DateTimeKind.Local).AddTicks(1462),
                            IsRemoved = false,
                            Title = "Legal"
                        });
                });

            modelBuilder.Entity("Notification.Domain.Entities.Email.EmailClient", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateDelivere")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateSend")
                        .HasColumnType("datetime2");

                    b.Property<long>("IdClient")
                        .HasColumnType("bigint");

                    b.Property<string>("Resiver")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EmailClients");
                });

            modelBuilder.Entity("Notification.Domain.Entities.Email.EmailUser", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateDelivere")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateSend")
                        .HasColumnType("datetime2");

                    b.Property<long>("IdUser")
                        .HasColumnType("bigint");

                    b.Property<string>("Resiver")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EmailUsers");
                });

            modelBuilder.Entity("Notification.Domain.Entities.Email.QeueEmailClient", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateSendStart")
                        .HasColumnType("datetime2");

                    b.Property<long>("IdClient")
                        .HasColumnType("bigint");

                    b.Property<string>("Periority")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Resiver")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("QEmailClients");
                });

            modelBuilder.Entity("Notification.Domain.Entities.Email.QeueEmailUser", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateSendStart")
                        .HasColumnType("datetime2");

                    b.Property<long>("IdUser")
                        .HasColumnType("bigint");

                    b.Property<string>("Periority")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Resiver")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("QEmailUsers");
                });

            modelBuilder.Entity("Notification.Domain.Entities.Notification.NotificationClient", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateDelivere")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateSend")
                        .HasColumnType("datetime2");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("IdClient")
                        .HasColumnType("bigint");

                    b.Property<string>("Resiver")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("NotificationClients");
                });

            modelBuilder.Entity("Notification.Domain.Entities.Notification.NotificationUser", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateDelivere")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateSend")
                        .HasColumnType("datetime2");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("IdUser")
                        .HasColumnType("bigint");

                    b.Property<string>("Resiver")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("NotificationUsers");
                });

            modelBuilder.Entity("Notification.Domain.Entities.Notification.QeueNotificationClient", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateSendStart")
                        .HasColumnType("datetime2");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("IdClient")
                        .HasColumnType("bigint");

                    b.Property<string>("Periority")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Resiver")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("QNotificationClient");
                });

            modelBuilder.Entity("Notification.Domain.Entities.Notification.QeueNotificationUser", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateSendStart")
                        .HasColumnType("datetime2");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("IdClient")
                        .HasColumnType("bigint");

                    b.Property<string>("Periority")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Resiver")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("QNotificationUsers");
                });

            modelBuilder.Entity("Notification.Domain.Entities.SMS.Common.Announcement", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("DateEndtshow")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateStartshow")
                        .HasColumnType("datetime2");

                    b.Property<long>("IdUser")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("InsertTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRemoved")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("RemoveTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("TxtAnnouncement")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdUser");

                    b.ToTable("Announcements");
                });

            modelBuilder.Entity("Notification.Domain.Entities.SMS.Common.CodeSMS", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("IdSarKhat")
                        .HasColumnType("bigint");

                    b.Property<long>("IdUser")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("InsertTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRemoved")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("RemoveTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReplyMessage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdUser");

                    b.ToTable("CodeSMs");
                });

            modelBuilder.Entity("Notification.Domain.Entities.SMS.Common.GroupFrinds", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("IdUser")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("InsertTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRemoved")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("RemoveTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdUser");

                    b.ToTable("GroupFrinds");
                });

            modelBuilder.Entity("Notification.Domain.Entities.SMS.Common.KhatSMS", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("IdProjects")
                        .HasColumnType("bigint");

                    b.Property<long>("IdSarKhat")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("InsertTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRemoved")
                        .HasColumnType("bit");

                    b.Property<string>("LineNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RemoveTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Statuse")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdProjects");

                    b.HasIndex("IdSarKhat");

                    b.ToTable("KhatSMS");
                });

            modelBuilder.Entity("Notification.Domain.Entities.SMS.Common.PackageSMS", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("InsertTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRemoved")
                        .HasColumnType("bit");

                    b.Property<long>("PricePackage")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("RemoveTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("TitlePackage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("PackageSMS");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            InsertTime = new DateTime(2022, 8, 21, 15, 11, 8, 139, DateTimeKind.Local).AddTicks(1358),
                            IsRemoved = false,
                            PricePackage = 100000L,
                            TitlePackage = "Golden"
                        },
                        new
                        {
                            Id = 2L,
                            InsertTime = new DateTime(2022, 8, 21, 15, 11, 8, 139, DateTimeKind.Local).AddTicks(1365),
                            IsRemoved = false,
                            PricePackage = 75000L,
                            TitlePackage = "Silver"
                        },
                        new
                        {
                            Id = 3L,
                            InsertTime = new DateTime(2022, 8, 21, 15, 11, 8, 139, DateTimeKind.Local).AddTicks(1369),
                            IsRemoved = false,
                            PricePackage = 50000L,
                            TitlePackage = "Bronze"
                        });
                });

            modelBuilder.Entity("Notification.Domain.Entities.SMS.Common.PackageTariff", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("EnglishTariff")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FarsiTariff")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("IdPackageSMS")
                        .HasColumnType("bigint");

                    b.Property<long>("IdSarKhat")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("InsertTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRemoved")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("RemoveTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdPackageSMS");

                    b.ToTable("PackageTariff");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            EnglishTariff = "25",
                            FarsiTariff = "30",
                            IdPackageSMS = 1L,
                            IdSarKhat = 1L,
                            InsertTime = new DateTime(2022, 8, 21, 15, 11, 8, 139, DateTimeKind.Local).AddTicks(1001),
                            IsRemoved = false
                        },
                        new
                        {
                            Id = 2L,
                            EnglishTariff = "35",
                            FarsiTariff = "40",
                            IdPackageSMS = 2L,
                            IdSarKhat = 2L,
                            InsertTime = new DateTime(2022, 8, 21, 15, 11, 8, 139, DateTimeKind.Local).AddTicks(1008),
                            IsRemoved = false
                        },
                        new
                        {
                            Id = 3L,
                            EnglishTariff = "45",
                            FarsiTariff = "50",
                            IdPackageSMS = 3L,
                            IdSarKhat = 3L,
                            InsertTime = new DateTime(2022, 8, 21, 15, 11, 8, 139, DateTimeKind.Local).AddTicks(1081),
                            IsRemoved = false
                        });
                });

            modelBuilder.Entity("Notification.Domain.Entities.SMS.Common.Phonebook", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("InsertTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRemoved")
                        .HasColumnType("bit");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RemoveTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Phonebooks");
                });

            modelBuilder.Entity("Notification.Domain.Entities.SMS.Common.SarKhat", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("InsertTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRemoved")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("RemoveTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("SarKhatNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Spacial")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("SarKhats");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            InsertTime = new DateTime(2022, 8, 21, 15, 11, 8, 139, DateTimeKind.Local).AddTicks(1410),
                            IsRemoved = false,
                            SarKhatNumber = "1000",
                            Spacial = true
                        },
                        new
                        {
                            Id = 2L,
                            InsertTime = new DateTime(2022, 8, 21, 15, 11, 8, 139, DateTimeKind.Local).AddTicks(1415),
                            IsRemoved = false,
                            SarKhatNumber = "2000",
                            Spacial = false
                        },
                        new
                        {
                            Id = 3L,
                            InsertTime = new DateTime(2022, 8, 21, 15, 11, 8, 139, DateTimeKind.Local).AddTicks(1419),
                            IsRemoved = false,
                            SarKhatNumber = "3000",
                            Spacial = false
                        });
                });

            modelBuilder.Entity("Notification.Domain.Entities.SMS.Common.StockSMS", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("IdUser")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("InsertTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRemoved")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("RemoveTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("StockMessage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitleStockMessage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdUser");

                    b.ToTable("StockSMs");
                });

            modelBuilder.Entity("Notification.Domain.Entities.SMS.QeueSend.QeueSMS", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("DateSendStart")
                        .HasColumnType("datetime2");

                    b.Property<long>("IdSMS")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("InsertTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRemoved")
                        .HasColumnType("bit");

                    b.Property<int>("Periority")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RemoveTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdSMS");

                    b.ToTable("QSMSUsers");
                });

            modelBuilder.Entity("Notification.Domain.Entities.SMS.QeueSMSClient", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateSendStart")
                        .HasColumnType("datetime2");

                    b.Property<long>("IdUser")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("InsertTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRemoved")
                        .HasColumnType("bit");

                    b.Property<string>("Periority")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RemoveTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Resiver")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdUser");

                    b.ToTable("QSMSClient");
                });

            modelBuilder.Entity("Notification.Domain.Entities.SMS.SMS.SMS_Resivers", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("DateDelivere")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateSend")
                        .HasColumnType("datetime2");

                    b.Property<int>("Deliverd")
                        .HasColumnType("int");

                    b.Property<long>("IdSMS")
                        .HasColumnType("bigint");

                    b.Property<string>("Resiver")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SendStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdSMS");

                    b.ToTable("SMS_Resivers");
                });

            modelBuilder.Entity("Notification.Domain.Entities.SMS.SMS.SMSUser", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("IdUser")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("InsertTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRemoved")
                        .HasColumnType("bit");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RemoveTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdUser");

                    b.ToTable("SMSUsers");
                });

            modelBuilder.Entity("Notification.Domain.Entities.SMS.SMSClient", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateDelivere")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateSend")
                        .HasColumnType("datetime2");

                    b.Property<long>("IdClient")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("InsertTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRemoved")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("RemoveTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Resiver")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("SMSClients");
                });

            modelBuilder.Entity("Notification.Domain.Entities.WriteModels.Common.BlackList.SpamWords", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Word")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SpamWords");
                });

            modelBuilder.Entity("Notification.Domain.Entities.WriteModels.SMS.QeueSend.QeueofSMS", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("IdUser")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("InsertTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRemoved")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("RemoveTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("TypeofResiver")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("dateOfsend")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dateofLimitet")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("periodSendly")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("periority")
                        .HasColumnType("int");

                    b.Property<string>("timeOfsend")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("to")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("txt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdUser");

                    b.ToTable("QeueofSMs");
                });

            modelBuilder.Entity("GroupFrindsPhonebook", b =>
                {
                    b.HasOne("Notification.Domain.Entities.SMS.Common.GroupFrinds", null)
                        .WithMany()
                        .HasForeignKey("GroupFrindsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Notification.Domain.Entities.SMS.Common.Phonebook", null)
                        .WithMany()
                        .HasForeignKey("PhonebooksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Notification.Domain.Entities.Common.DocumentsUser", b =>
                {
                    b.HasOne("Notification.Domain.Entities.Common.DocumentType", "DocumentType")
                        .WithMany()
                        .HasForeignKey("IdDocumentType")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Notification.Domain.Entities.Common.Users", "User")
                        .WithMany("DocumentsUser")
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DocumentType");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Notification.Domain.Entities.Common.Users", b =>
                {
                    b.HasOne("Notification.Domain.Entities.SMS.Common.PackageTariff", "PackageTariff")
                        .WithMany("User")
                        .HasForeignKey("IdPackageTariff")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Notification.Domain.Entities.Common.Usertype", "USerType")
                        .WithMany("User")
                        .HasForeignKey("IdUSerType")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PackageTariff");

                    b.Navigation("USerType");
                });

            modelBuilder.Entity("Notification.Domain.Entities.SMS.Common.Announcement", b =>
                {
                    b.HasOne("Notification.Domain.Entities.Common.Users", "Users")
                        .WithMany()
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Notification.Domain.Entities.SMS.Common.CodeSMS", b =>
                {
                    b.HasOne("Notification.Domain.Entities.Common.Users", "Users")
                        .WithMany()
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Notification.Domain.Entities.SMS.Common.GroupFrinds", b =>
                {
                    b.HasOne("Notification.Domain.Entities.Common.Users", "Users")
                        .WithMany()
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Notification.Domain.Entities.SMS.Common.KhatSMS", b =>
                {
                    b.HasOne("Notification.Domain.Entities.Common.Projects", "Projects")
                        .WithMany("KhatSMS")
                        .HasForeignKey("IdProjects")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Notification.Domain.Entities.SMS.Common.SarKhat", "SarKhat")
                        .WithMany("KhatSMS")
                        .HasForeignKey("IdSarKhat")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Projects");

                    b.Navigation("SarKhat");
                });

            modelBuilder.Entity("Notification.Domain.Entities.SMS.Common.PackageTariff", b =>
                {
                    b.HasOne("Notification.Domain.Entities.SMS.Common.PackageSMS", "PackageSMS")
                        .WithMany("PackageTariffs")
                        .HasForeignKey("IdPackageSMS")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PackageSMS");
                });

            modelBuilder.Entity("Notification.Domain.Entities.SMS.Common.StockSMS", b =>
                {
                    b.HasOne("Notification.Domain.Entities.Common.Users", "Users")
                        .WithMany()
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Notification.Domain.Entities.SMS.QeueSend.QeueSMS", b =>
                {
                    b.HasOne("Notification.Domain.Entities.SMS.SMS.SMSUser", "SMSUser")
                        .WithMany("QeueSMSUser")
                        .HasForeignKey("IdSMS")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SMSUser");
                });

            modelBuilder.Entity("Notification.Domain.Entities.SMS.QeueSMSClient", b =>
                {
                    b.HasOne("Notification.Domain.Entities.Common.Users", "Users")
                        .WithMany()
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Notification.Domain.Entities.SMS.SMS.SMS_Resivers", b =>
                {
                    b.HasOne("Notification.Domain.Entities.SMS.SMS.SMSUser", "SMSUser")
                        .WithMany("SMS_Resivers")
                        .HasForeignKey("IdSMS")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SMSUser");
                });

            modelBuilder.Entity("Notification.Domain.Entities.SMS.SMS.SMSUser", b =>
                {
                    b.HasOne("Notification.Domain.Entities.Common.Users", "Users")
                        .WithMany("SMSUser")
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Notification.Domain.Entities.WriteModels.SMS.QeueSend.QeueofSMS", b =>
                {
                    b.HasOne("Notification.Domain.Entities.Common.Users", "Users")
                        .WithMany("QeueofSMS")
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Notification.Domain.Entities.Common.Projects", b =>
                {
                    b.Navigation("KhatSMS");
                });

            modelBuilder.Entity("Notification.Domain.Entities.Common.Users", b =>
                {
                    b.Navigation("DocumentsUser");

                    b.Navigation("QeueofSMS");

                    b.Navigation("SMSUser");
                });

            modelBuilder.Entity("Notification.Domain.Entities.Common.Usertype", b =>
                {
                    b.Navigation("User");
                });

            modelBuilder.Entity("Notification.Domain.Entities.SMS.Common.PackageSMS", b =>
                {
                    b.Navigation("PackageTariffs");
                });

            modelBuilder.Entity("Notification.Domain.Entities.SMS.Common.PackageTariff", b =>
                {
                    b.Navigation("User");
                });

            modelBuilder.Entity("Notification.Domain.Entities.SMS.Common.SarKhat", b =>
                {
                    b.Navigation("KhatSMS");
                });

            modelBuilder.Entity("Notification.Domain.Entities.SMS.SMS.SMSUser", b =>
                {
                    b.Navigation("QeueSMSUser");

                    b.Navigation("SMS_Resivers");
                });
#pragma warning restore 612, 618
        }
    }
}
